name: "DAST with OWASP ZAP"

on:  # Adjust triggers as needed
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 3 * * 5'  # Scheduled for Fridays at 03:00 UTC
  workflow_dispatch:  # Option for manual triggering

jobs:
  dast:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # Adjust timeout if needed

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flask flask_sqlalchemy gunicorn 

    - name: Start application
      run: |
        gunicorn --workers 3 --bind 0.0.0.0:8000 app:app &  
        sleep 10  # Allow time for application to start

    - name: Run ZAP Full Scan
      uses: zaproxy/action-fullscan@v0.4.0
      with:
        target: 'http://localhost:8000' 
        format: 'html'
        report_filename: 'zap_full_report.html'

    - name: Upload ZAP Report as Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ZAP-Report
        path: zap_full_report.html

    - name: Kill application
      if: always()  # Ensure this runs even if previous steps fail
      run: killall gunicorn 
